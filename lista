Lista

powersheel
mkdir MiProyecto
cd MiProyecto
code .

visual studio
git init
*creo .gitignore
python -m venv .venv
*selecciono el interprete venv .venv
.\.venv\Scripts\activate
python.exe -m pip install --upgrade pip
pip install django
freeze >> requeriments.txt
mkdir project
cd project
django-admin startproject config .

visual studio
git branch dev
git checkout dev
python manage.py startapp clase

*crear el archivo urls.py en clase

(hacer cambios en los archivos hasta aca)

visual studio
python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser
python manage.py runserver
python manage.py startapp core

*crear la carpeta templates en core y dentro de ella otra carpeta llamada core, dentro de esa el archivo index.html
*hacer lo mismo en clase
*crear en la misma carpeta de core base.html

Si hay dos personas que compran el mismo producto al mismo tiempo, como se maneja.

startapp
settings
models
pillow
urls
django admin collect static

python anywhereo o heroku (para ponerlo en produccion)
aprender fastAPI con SQLModel para SQLAlchemy(ORM)
Pandas
react to python (reactpy)
pytorch
python re
postgre
celery django
rady django
htmx

siempre ver la ultima actualizacion para saber si sigue funcional